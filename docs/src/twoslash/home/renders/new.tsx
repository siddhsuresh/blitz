// Auto-generated by the twoslash-cli from new.tsx.md
import React from "react"

const innerHTML = `
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">tsx</div><div class='code-container'><code><div class='line'><span style="color: #008000">//---- ON THE CLIENT ----</span></div><div class='line'><span style="color: #008000">// app/pages/projects/new.tsx</span></div><div class='line'><span style="color: #AF00DB">import</span><span style="color: #000000"> { </span><span style="color: #001080"><data-lsp lsp='(alias) type BlitzPage&lt;P = {}> = React.ComponentType&lt;P> &amp; {&#10;    getLayout?: ((component: JSX.Element) => JSX.Element) | undefined;&#10;    authenticate?: boolean | {&#10;        redirectTo?: string | RouteUrlObject | undefined;&#10;        role?: string | ... 1 more ... | undefined;&#10;    } | undefined;&#10;    suppressFirstRenderFlicker?: boolean | undefined;&#10;    redirectAuthenticatedTo?: RedirectAuthenticatedTo | ... 1 more ... | undefined;&#10;}&#10;import BlitzPage' >BlitzPage</data-lsp></span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(alias) const Routes: {&#10;    ThisFileHasNotYetBeenGeneratedPleaseRunBlitzCodeGen(query?: ParsedUrlQueryInput): UrlObject;&#10;}&#10;import Routes' >Routes</data-lsp></span><span style="color: #000000"> } </span><span style="color: #AF00DB">from</span><span style="color: #000000"> </span><span style="color: #A31515">"@blitzjs/next"</span></div><div class='line'><span style="color: #AF00DB">import</span><span style="color: #000000"> { </span><span style="color: #001080"><data-lsp lsp='(alias) function useRouter(): NextRouter&#10;import useRouter' >useRouter</data-lsp></span><span style="color: #000000"> } </span><span style="color: #AF00DB">from</span><span style="color: #000000"> </span><span style="color: #A31515">"next/router"</span></div><div class='line'><span style="color: #AF00DB">import</span><span style="color: #000000"> { </span><span style="color: #001080"><data-lsp lsp='(alias) function useMutation&lt;TData = unknown, TError = unknown, TVariables = void, TContext = unknown>(mutationResolver: MutationFunction&lt;TData, TVariables>, config?: UseMutationOptions&lt;TData, TError, TVariables, TContext>): MutationResultPair&lt;TData, TError, TVariables, TContext>&#10;import useMutation' >useMutation</data-lsp></span><span style="color: #000000"> } </span><span style="color: #AF00DB">from</span><span style="color: #000000"> </span><span style="color: #A31515">"@blitzjs/rpc"</span></div><div class='line'><span style="color: #AF00DB">import</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='import Layout' >Layout</data-lsp></span><span style="color: #000000"> </span><span style="color: #AF00DB">from</span><span style="color: #000000"> </span><span style="color: #A31515"><data-err>&quot;src/core/layouts/Layout&quot;</data-err></span></div><span class="error"><span>Cannot find module 'src/core/layouts/Layout' or its corresponding type declarations.</span><span class="code">2307</span></span><span class="error-behind">Cannot find module 'src/core/layouts/Layout' or its corresponding type declarations.</span><div class='line'><span style="color: #008000">// Notice how we import the server function directly</span></div><div class='line'><span style="color: #AF00DB">import</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='import createProject' >createProject</data-lsp></span><span style="color: #000000">, { </span><span style="color: #001080"><data-lsp lsp='import CreateProject' >CreateProject</data-lsp></span><span style="color: #000000"> } </span><span style="color: #AF00DB">from</span><span style="color: #000000"> </span><span style="color: #A31515"><data-err>&quot;src/projects/mutations/createProject&quot;</data-err></span></div><span class="error"><span>Cannot find module 'src/projects/mutations/createProject' or its corresponding type declarations.</span><span class="code">2307</span></span><span class="error-behind">Cannot find module 'src/projects/mutations/createProject' or its corresponding type declarations.</span><div class='line'><span style="color: #AF00DB">import</span><span style="color: #000000"> { </span><span style="color: #001080"><data-lsp lsp='import ProjectForm' >ProjectForm</data-lsp></span><span style="color: #000000"> } </span><span style="color: #AF00DB">from</span><span style="color: #000000"> </span><span style="color: #A31515"><data-err>&quot;src/projects/components/ProjectForm&quot;</data-err></span></div><span class="error"><span>Cannot find module 'src/projects/components/ProjectForm' or its corresponding type declarations.</span><span class="code">2307</span></span><span class="error-behind">Cannot find module 'src/projects/components/ProjectForm' or its corresponding type declarations.</span><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='module NewProjectPage&#10;const NewProjectPage: BlitzPage' >NewProjectPage</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(alias) type BlitzPage&lt;P = {}> = React.ComponentType&lt;P> &amp; {&#10;    getLayout?: ((component: JSX.Element) => JSX.Element) | undefined;&#10;    authenticate?: boolean | {&#10;        redirectTo?: string | RouteUrlObject | undefined;&#10;        role?: string | ... 1 more ... | undefined;&#10;    } | undefined;&#10;    suppressFirstRenderFlicker?: boolean | undefined;&#10;    redirectAuthenticatedTo?: RedirectAuthenticatedTo | ... 1 more ... | undefined;&#10;}&#10;import BlitzPage' >BlitzPage</data-lsp></span><span style="color: #000000"> = () </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const router: NextRouter' >router</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='(alias) useRouter(): NextRouter&#10;import useRouter' >useRouter</data-lsp></span><span style="color: #000000">()</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">const</span><span style="color: #000000"> [</span><span style="color: #0070C1"><data-lsp lsp='const createProjectMutation: MutateFunction&lt;unknown, unknown, void, unknown>' >createProjectMutation</data-lsp></span><span style="color: #000000">] = </span><span style="color: #795E26"><data-lsp lsp='(alias) useMutation&lt;unknown, unknown, void, unknown>(mutationResolver: MutationFunction&lt;unknown, void>, config?: UseMutationOptions&lt;unknown, unknown, void, unknown> | undefined): MutationResultPair&lt;unknown, unknown, void, unknown>&#10;import useMutation' >useMutation</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='import createProject' >createProject</data-lsp></span><span style="color: #000000">)</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> (</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #800000">&lt;<data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp>></span></div><div class='line'><span style="color: #000000">      </span><span style="color: #800000">&lt;<data-lsp lsp='(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLHeadingElement>, HTMLHeadingElement>' >h1</data-lsp>></span><span style="color: #000000">Create New Project</span><span style="color: #800000">&lt;/<data-lsp lsp='(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLHeadingElement>, HTMLHeadingElement>' >h1</data-lsp>></span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">      </span><span style="color: #800000">&lt;</span><span style="color: #267F99"><data-lsp lsp='import ProjectForm' >ProjectForm</data-lsp></span></div><div class='line'><span style="color: #000000">        </span><span style="color: #FF0000"><data-lsp lsp='(property) submitText: string' >submitText</data-lsp></span><span style="color: #000000">=</span><span style="color: #A31515">"Create Project"</span></div><div class='line'><span style="color: #000000">        </span><span style="color: #FF0000"><data-lsp lsp='(property) schema: any' >schema</data-lsp></span><span style="color: #000000">=</span><span style="color: #0000FF">{</span><span style="color: #001080"><data-lsp lsp='import CreateProject' >CreateProject</data-lsp></span><span style="color: #0000FF">}</span></div><div class='line'><span style="color: #000000">        </span><span style="color: #FF0000"><data-lsp lsp='(property) onSubmit: (values: any) => Promise&lt;void>' >onSubmit</data-lsp></span><span style="color: #000000">=</span><span style="color: #0000FF">{async</span><span style="color: #000000FF"> (</span><span style="color: #001080"><data-lsp lsp='(parameter) values: any' >values</data-lsp></span><span style="color: #000000">:</span><span style="color: #000000FF"> </span><span style="color: #267F99">any</span><span style="color: #000000FF">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000FF"> {</span></div><div class='line'><span style="color: #000000FF">          </span><span style="color: #008000">// This is equivalent to calling the server function directly</span></div><div class='line'><span style="color: #000000FF">          </span><span style="color: #0000FF">const</span><span style="color: #000000FF"> </span><span style="color: #0070C1"><data-lsp lsp='const project: unknown' >project</data-lsp></span><span style="color: #000000FF"> </span><span style="color: #000000">=</span><span style="color: #000000FF"> </span><span style="color: #AF00DB">await</span><span style="color: #000000FF"> </span><span style="color: #795E26"><data-lsp lsp='const createProjectMutation: (variables?: void | undefined, config?: any) => Promise&lt;unknown>' >createProjectMutation</data-lsp></span><span style="color: #000000FF">(</span><span style="color: #001080"><data-lsp lsp='(parameter) values: any' >values</data-lsp></span><span style="color: #000000FF">)</span></div><div class='line'><span style="color: #000000FF">          </span><span style="color: #008000">// Notice the &apos;Routes&apos; object Blitz provides for routing</span></div><div class='line'><span style="color: #000000FF">          </span><span style="color: #001080"><data-lsp lsp='const router: NextRouter' >router</data-lsp></span><span style="color: #000000FF">.</span><span style="color: #795E26"><data-lsp lsp='(method) push(url: Url, as?: Url | undefined, options?: TransitionOptions | undefined): Promise&lt;boolean>' >push</data-lsp></span><span style="color: #000000FF">(</span><span style="color: #A31515">"/"</span><span style="color: #000000FF">)</span></div><div class='line'><span style="color: #000000FF">        }</span><span style="color: #0000FF">}</span></div><div class='line'><span style="color: #000000">      </span><span style="color: #800000">/&gt;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #800000">&lt;/<data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp>></span></div><div class='line'><span style="color: #000000">  );</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #001080"><data-lsp lsp='module NewProjectPage&#10;const NewProjectPage: React.FunctionComponent&lt;{}> &amp; {&#10;    getLayout?: ((component: JSX.Element) => JSX.Element) | undefined;&#10;    authenticate?: boolean | {&#10;        redirectTo?: string | RouteUrlObject | undefined;&#10;        role?: string | ... 1 more ... | undefined;&#10;    } | undefined;&#10;    suppressFirstRenderFlicker?: boolean | undefined;&#10;    redirectAuthenticatedTo?: RedirectAuthenticatedTo | ... 1 more ... | undefined;&#10;}' >NewProjectPage</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) authenticate?: boolean | {&#10;    redirectTo?: string | RouteUrlObject | undefined;&#10;    role?: string | string[] | undefined;&#10;} | undefined' >authenticate</data-lsp></span><span style="color: #000000"> = </span><span style="color: #0000FF">true</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='module NewProjectPage&#10;const NewProjectPage: React.FunctionComponent&lt;{}> &amp; {&#10;    getLayout?: ((component: JSX.Element) => JSX.Element) | undefined;&#10;    authenticate?: boolean | {&#10;        redirectTo?: string | RouteUrlObject | undefined;&#10;        role?: string | ... 1 more ... | undefined;&#10;    } | undefined;&#10;    suppressFirstRenderFlicker?: boolean | undefined;&#10;    redirectAuthenticatedTo?: RedirectAuthenticatedTo | ... 1 more ... | undefined;&#10;}' >NewProjectPage</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(property) getLayout?: ((component: JSX.Element) => JSX.Element) | undefined' >getLayout</data-lsp></span><span style="color: #000000"> = (</span><span style="color: #001080"><data-lsp lsp='(parameter) page: JSX.Element' >page</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #800000">&lt;</span><span style="color: #267F99"><data-lsp lsp='import Layout' >Layout</data-lsp></span><span style="color: #800000">&gt;</span><span style="color: #0000FF">{</span><span style="color: #001080"><data-lsp lsp='(parameter) page: JSX.Element' >page</data-lsp></span><span style="color: #0000FF">}</span><span style="color: #800000">&lt;/</span><span style="color: #267F99"><data-lsp lsp='import Layout' >Layout</data-lsp></span><span style="color: #800000">&gt;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #AF00DB">export</span><span style="color: #000000"> </span><span style="color: #AF00DB">default</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='module NewProjectPage&#10;const NewProjectPage: BlitzPage' >NewProjectPage</data-lsp></span></div></code></div></pre>
`

export const Code = () => <div dangerouslySetInnerHTML={{ __html: innerHTML }} />
