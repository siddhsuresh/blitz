name: CI

on:
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: 05de0230f01174d1f8cb4845a01dc6c895ce28f04ebef2318ab11615791b871c35eabbf8
  TURBO_TEAM: foo

jobs:
#   lint:
#     name: "Lint: ${{ matrix.os }}"
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os:
#           - ubuntu-latest
#         node_version:
#           - 16
#     steps:
#       - uses: actions/checkout@v2
#       - uses: pnpm/action-setup@646cdf48217256a3d0b80361c5a50727664284f2
#         with:
#           version: 6.32.6
#       - name: Setup node
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node_version }}
#           cache: "pnpm"
#       - name: Install dependencies
#         run: pnpm install  --frozen-lockfile
#       - run: pnpm manypkg check
#       - name: Turborepo local server
#         uses: felixmosh/turborepo-gh-artifacts@v1
#         with:
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#           server-token: ${{ env.TURBO_TOKEN }}
#       - name: Build
#         run: pnpm build -- --api="http://127.0.0.1:9080"
#       - name: Lint
#         run: pnpm lint -- --api="http://127.0.0.1:9080"

#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os:
#           - ubuntu-latest
#         node_version:
#           - 16
#     name: Build - ${{ matrix.os }}
#     steps:
#       - uses: actions/checkout@v2
#       - uses: pnpm/action-setup@646cdf48217256a3d0b80361c5a50727664284f2
#         with:
#           version: 6.32.6
#       - name: Setup node
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node_version }}
#           cache: "pnpm"
#       - run: pnpm install --frozen-lockfile
#       - run: pnpm manypkg check
#       - name: Turborepo local server
#         uses: felixmosh/turborepo-gh-artifacts@v1
#         with:
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#           server-token: ${{ env.TURBO_TOKEN }}
#       - uses: preactjs/compressed-size-action@v2
#         with:
#           pattern: "**/dist/**/*.{js,cjs,mjs}"
#       - name: Build Apps
#         run: pnpm build:apps -- --api="http://127.0.0.1:9080"

#   Unit-Tests:
#     name: "Unit Test: ${{ matrix.os }} (node@${{ matrix.NODE_VERSION }})"
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os:
#           - ubuntu-latest
#           - windows-latest
#         node_version:
#           - 16
#       fail-fast: false
#     env:
#       NODE_VERSION: ${{ matrix.NODE_VERSION }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Setup PNPM
#         uses: pnpm/action-setup@646cdf48217256a3d0b80361c5a50727664284f2
#         with:
#           version: 6.32.6

#       - name: Setup node@${{ matrix.NODE_VERSION }}
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.NODE_VERSION }}
#           cache: "pnpm"

#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile
#         shell: bash

#       - run: pnpm manypkg check
#         shell: bash

#       - name: Turborepo local server
#         uses: felixmosh/turborepo-gh-artifacts@v1
#         with:
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#           server-token: ${{ env.TURBO_TOKEN }}

#       - name: Build
#         run: pnpm build -- --api="http://127.0.0.1:9080"
#         shell: bash

#       - name: Test Packages
#         run: pnpm test -- --filter=./packages/*
#         shell: bash
        
#       - name: Test Apps
#         run: pnpm test -- --filter=./apps/*
#         shell: bash
        
  find-integration-tests:
    name: "Find Integration Tests"
    runs-on: ubuntu-latest
    outputs:
#       folders: ${{ toJson(steps.jobs.outputs.folders) }}
      matrix: ${{ steps.jobs.outputs.folders }}
    steps:
      - uses: actions/checkout@v1
      - name: "Find all folders"
        shell: bash
        run: |
            cd ./integration-tests
            folders=$(tree -J -d -L 1 | jq -c '.[0].contents | map(.name)')
            echo $folders
            echo "::set-output name=matrix::$folders"

  Integration-Test:
    name: "Matrix Jobs ${{ matrix.os }} ${{matrix.folder}}"
    needs: [find-integration-tests]
    strategy:
      matrix:
        value: ${{fromJSON(needs.find-integration-tests.outputs.matrix)}}
        os :
          - ubuntu-latest
          - windows-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}   
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@646cdf48217256a3d0b80361c5a50727664284f2
        with:
          version: 6.32.6

      - name: Setup node@${{ matrix.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - run: pnpm manypkg check
        shell: bash

      - name: Turborepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: Build
        run: pnpm build -- --api="http://127.0.0.1:9080"
        shell: bash

      - name: Test Packages
        working-directory: ${{ matrix.folder }}
        run: npm test
        shell: bash
    
